apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: state
provisioner: rancher.io/local-path
parameters:
  type: gp2
reclaimPolicy: Retain
allowVolumeExpansion: false

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-state
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: state
  hostPath:
    path: /mnt/state

---

apiVersion: v1
kind: Secret
metadata:
  name: mysqlsecret
  namespace: datastorage
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: <base64-encoded-root-password>
  MYSQL_PASSWORD: <base64-encoded-password>

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysqlconfig
  namespace: datastorage
data:
  MYSQL_DATABASE: <database-name>
  MYSQL_USER: <username>

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-statefulset
  namespace: datastorage
spec:
  serviceName: "mysql"
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:oraclelinux9
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysqlsecret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysqlsecret
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mysqlconfig
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: mysqlconfig
              key: MYSQL_USER
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: state
      resources:
        requests:
          storage: 2Gi